{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\97517\\\\Desktop\\\\feedback - Copy\\\\feedback-system-frontend\\\\src\\\\components\\\\UpdatePassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from '../axiosConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdatePassword = () => {\n  _s();\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const email = 'admin@nppf.org'; // Hardcoded for now, you can modify based on the user session\n\n  const handlePasswordUpdate = async () => {\n    if (newPassword !== confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n    try {\n      await axios.post('/api/auth/update-password', {\n        email,\n        newPassword\n      });\n      alert('Password updated successfully!');\n    } catch (err) {\n      setError('Failed to update password');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Update Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"New Password\",\n      value: newPassword,\n      onChange: e => setNewPassword(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      value: confirmPassword,\n      onChange: e => setConfirmPassword(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePasswordUpdate,\n      children: \"Update Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdatePassword, \"XOnhhqYiqsr6wouylaUelLOuxkg=\");\n_c = UpdatePassword;\nexport default UpdatePassword;\nvar _c;\n$RefreshReg$(_c, \"UpdatePassword\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UpdatePassword","_s","newPassword","setNewPassword","confirmPassword","setConfirmPassword","error","setError","email","handlePasswordUpdate","post","alert","err","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/97517/Desktop/feedback - Copy/feedback-system-frontend/src/components/UpdatePassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from '../axiosConfig';\r\n\r\nconst UpdatePassword = () => {\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const email = 'admin@nppf.org'; // Hardcoded for now, you can modify based on the user session\r\n\r\n  const handlePasswordUpdate = async () => {\r\n    if (newPassword !== confirmPassword) {\r\n      setError('Passwords do not match');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await axios.post('/api/auth/update-password', { email, newPassword });\r\n      alert('Password updated successfully!');\r\n    } catch (err) {\r\n      setError('Failed to update password');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Update Password</h2>\r\n      {error && <p>{error}</p>}\r\n      <input \r\n        type=\"password\" \r\n        placeholder=\"New Password\" \r\n        value={newPassword} \r\n        onChange={(e) => setNewPassword(e.target.value)} \r\n        required \r\n      />\r\n      <input \r\n        type=\"password\" \r\n        placeholder=\"Confirm Password\" \r\n        value={confirmPassword} \r\n        onChange={(e) => setConfirmPassword(e.target.value)} \r\n        required \r\n      />\r\n      <button onClick={handlePasswordUpdate}>Update Password</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdatePassword;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACQ,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMY,KAAK,GAAG,gBAAgB,CAAC,CAAC;;EAEhC,MAAMC,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAIP,WAAW,KAAKE,eAAe,EAAE;MACnCG,QAAQ,CAAC,wBAAwB,CAAC;MAClC;IACF;IAEA,IAAI;MACF,MAAMV,KAAK,CAACa,IAAI,CAAC,2BAA2B,EAAE;QAAEF,KAAK;QAAEN;MAAY,CAAC,CAAC;MACrES,KAAK,CAAC,gCAAgC,CAAC;IACzC,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZL,QAAQ,CAAC,2BAA2B,CAAC;IACvC;EACF,CAAC;EAED,oBACER,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvBX,KAAK,iBAAIP,OAAA;MAAAc,QAAA,EAAIP;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBlB,OAAA;MACEmB,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,cAAc;MAC1BC,KAAK,EAAElB,WAAY;MACnBmB,QAAQ,EAAGC,CAAC,IAAKnB,cAAc,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAChDI,QAAQ;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACFlB,OAAA;MACEmB,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,kBAAkB;MAC9BC,KAAK,EAAEhB,eAAgB;MACvBiB,QAAQ,EAAGC,CAAC,IAAKjB,kBAAkB,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACpDI,QAAQ;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACFlB,OAAA;MAAQ0B,OAAO,EAAEhB,oBAAqB;MAAAI,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEV,CAAC;AAAChB,EAAA,CAzCID,cAAc;AAAA0B,EAAA,GAAd1B,cAAc;AA2CpB,eAAeA,cAAc;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}