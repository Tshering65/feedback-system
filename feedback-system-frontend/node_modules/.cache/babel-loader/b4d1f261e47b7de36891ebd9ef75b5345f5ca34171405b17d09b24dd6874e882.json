{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\97517\\\\Desktop\\\\feedback\\\\feedback-system-frontend\\\\src\\\\components\\\\FeedbackDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FeedbackDashboard() {\n  _s();\n  const [services, setServices] = useState([]);\n  const [selectedService, setSelectedService] = useState(null);\n  const [emojiFeedback, setEmojiFeedback] = useState([]);\n  const [feedbackDetails, setFeedbackDetails] = useState([]);\n\n  // Fetch the list of services and feedback data\n  useEffect(() => {\n    const fetchServices = async () => {\n      try {\n        const response = await axios.get('/api/services'); // Fetch services list\n        setServices(response.data);\n      } catch (error) {\n        console.error(\"Error fetching services\", error);\n      }\n    };\n    fetchServices();\n  }, []);\n  const fetchFeedbackData = async service => {\n    try {\n      const response = await axios.get(`/api/feedback?service=${service}`);\n      setEmojiFeedback(response.data.emojiFeedback); // Example response format: [{ emoji: 'happy', count: 10 }, ...]\n      setFeedbackDetails(response.data.feedbackDetails); // Example format: [{ emoji: 'happy', feedbacks: [...] }, ...]\n    } catch (error) {\n      console.error(\"Error fetching feedback data\", error);\n    }\n  };\n  const handleServiceClick = service => {\n    setSelectedService(service);\n    fetchFeedbackData(service); // Fetch emoji feedback when service is clicked\n  };\n  const handleEmojiClick = emoji => {\n    // Show feedback and emails based on emoji\n    const feedback = feedbackDetails.find(f => f.emoji === emoji);\n    if (feedback) {\n      // Display feedback and emails\n      console.log(feedback);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feedback-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"services-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Services\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), services.map(service => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `service-item ${selectedService === service ? 'active' : ''}`,\n        onClick: () => handleServiceClick(service),\n        children: service\n      }, service, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedback-display\",\n      children: selectedService && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [selectedService, \" Feedback\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"emoji-feedback\",\n          children: emojiFeedback.map(({\n            emoji,\n            count\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"emoji-item\",\n            onClick: () => handleEmojiClick(emoji),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: emoji\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [count, \" feedbacks\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this)]\n          }, emoji, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(FeedbackDashboard, \"j3mU9MGBp/0Yfp5kBKdPO/Rf35U=\");\n_c = FeedbackDashboard;\nexport default FeedbackDashboard;\nvar _c;\n$RefreshReg$(_c, \"FeedbackDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","FeedbackDashboard","_s","services","setServices","selectedService","setSelectedService","emojiFeedback","setEmojiFeedback","feedbackDetails","setFeedbackDetails","fetchServices","response","get","data","error","console","fetchFeedbackData","service","handleServiceClick","handleEmojiClick","emoji","feedback","find","f","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","count","_c","$RefreshReg$"],"sources":["C:/Users/97517/Desktop/feedback/feedback-system-frontend/src/components/FeedbackDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction FeedbackDashboard() {\r\n  const [services, setServices] = useState([]);\r\n  const [selectedService, setSelectedService] = useState(null);\r\n  const [emojiFeedback, setEmojiFeedback] = useState([]);\r\n  const [feedbackDetails, setFeedbackDetails] = useState([]);\r\n\r\n  // Fetch the list of services and feedback data\r\n  useEffect(() => {\r\n    const fetchServices = async () => {\r\n      try {\r\n        const response = await axios.get('/api/services');  // Fetch services list\r\n        setServices(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching services\", error);\r\n      }\r\n    };\r\n\r\n    fetchServices();\r\n  }, []);\r\n\r\n  const fetchFeedbackData = async (service) => {\r\n    try {\r\n      const response = await axios.get(`/api/feedback?service=${service}`);\r\n      setEmojiFeedback(response.data.emojiFeedback); // Example response format: [{ emoji: 'happy', count: 10 }, ...]\r\n      setFeedbackDetails(response.data.feedbackDetails); // Example format: [{ emoji: 'happy', feedbacks: [...] }, ...]\r\n    } catch (error) {\r\n      console.error(\"Error fetching feedback data\", error);\r\n    }\r\n  };\r\n\r\n  const handleServiceClick = (service) => {\r\n    setSelectedService(service);\r\n    fetchFeedbackData(service); // Fetch emoji feedback when service is clicked\r\n  };\r\n\r\n  const handleEmojiClick = (emoji) => {\r\n    // Show feedback and emails based on emoji\r\n    const feedback = feedbackDetails.find(f => f.emoji === emoji);\r\n    if (feedback) {\r\n      // Display feedback and emails\r\n      console.log(feedback);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"feedback-dashboard\">\r\n      <div className=\"services-sidebar\">\r\n        <h3>Services</h3>\r\n        {services.map(service => (\r\n          <div\r\n            key={service}\r\n            className={`service-item ${selectedService === service ? 'active' : ''}`}\r\n            onClick={() => handleServiceClick(service)}\r\n          >\r\n            {service}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"feedback-display\">\r\n        {selectedService && (\r\n          <>\r\n            <h3>{selectedService} Feedback</h3>\r\n            <div className=\"emoji-feedback\">\r\n              {emojiFeedback.map(({ emoji, count }) => (\r\n                <div key={emoji} className=\"emoji-item\" onClick={() => handleEmojiClick(emoji)}>\r\n                  <span>{emoji}</span>\r\n                  <span>{count} feedbacks</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FeedbackDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}